3/1/2025
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.
Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]

Solution
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;
        int n = nums.size();

        int i = 0, j = n - 1;
        while (i < j) {
            int PairSum = nums[i] + nums[j];
            if (PairSum > target) {
                j--;
            } else if (PairSum < target) {
                i++;
            } else {
                ans.push_back(i);
                ans.push_back(j);
                return ans; // Correctly return the result when a pair is found
            }
        }
        return ans; // Return an empty vector if no pair is found
    }
};
