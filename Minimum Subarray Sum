1/1/2025(Wednesday)
(Leetcode Problem)
Given an integer array nums, find the subarray with the largest sum, and return its sum.
Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6


solution  
1)Brute force approach
#include<iostream>
using namespace std;
int main()
{
    int n=7;
    int arr[7]={3,-4,5,4,-1,7,-8};
    int maxSum=INT_MIN;
    for(int start=0; start<n;start++)
     {
         int cursum=0;
         for(int end=start;end<n;end++)
         {
             cursum+=arr[end];
             maxSum=max(cursum,maxSum);

          }
      cout<<maxSum;
}

2)Optimal approach(Kadane's Algorithm)
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int CurrSum=0;
        int maxSum=INT_MIN;
        for (int num : nums)
        {
            CurrSum+=num;
            maxSum=max(CurrSum,maxSum);
            if(CurrSum<0)
            {
                CurrSum=0;
            }
        }
        return maxSum;
    }
};
